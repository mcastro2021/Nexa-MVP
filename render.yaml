services:
  - type: web
    name: constructora-web
    env: node
    rootDir: apps/web
    buildCommand: "npm install && npm run build"
    startCommand: "npm run start"
    envVars:
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: constructora-api
          envVarKey: RENDER_EXTERNAL_URL
      - key: NODE_ENV
        value: production
    healthCheckPath: /
    autoDeploy: true

  - type: web
    name: constructora-api
    env: node
    rootDir: apps/api
    buildCommand: "npm install && npm run prisma:generate && npm run build"
    startCommand: "npm run start"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: constructora-db
          property: connectionString
      - key: JWT_SECRET
        generateValue: true
      - key: REDIS_URL
        fromService:
          type: redis
          name: constructora-redis
          property: connectionString
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 4000
    healthCheckPath: /healthz
    autoDeploy: true

  - type: worker
    name: constructora-worker
    env: node
    rootDir: apps/worker
    buildCommand: "npm install && npm run build"
    startCommand: "npm run start"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: constructora-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: constructora-redis
          property: connectionString
      - key: NODE_ENV
        value: production
    autoDeploy: true

databases:
  - name: constructora-db
    plan: starter
    region: oregon
    version: 16

servicesPlus:
  - type: redis
    name: constructora-redis
    plan: starter
    region: oregon
    maxmemoryPolicy: allkeys-lru
